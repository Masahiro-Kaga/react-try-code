089
　UIとAddUserコンポーネント追加。Formとファンクションも必要。

090
　Cardコンポーネント作成、cssも。
　AddUser.module.cssはダウンロード。でも自分で作成した方が良い。
　
　Cardコンポーネントに二つのクラスを適用させる。一つはこのコンポーネント独自のもの、もう一つは親コンポーネントから引っ張ってきた（propsで）もの。
　その際、テンプレートリテラルを使用してクラス名を設定すること。

　CSSは以下でも同じような結果。
　{AddUser}
　.input{
    margin:2rem auto;
    padding:20px;
　}
　.form{
    display:flex;
    flex-direction: column;
    gap:20px;
　}

 {Card}
　.card{
    background-color:white;
    width:50%;
    border-radius:10px;
　}

　マックスコードのCSSのミソは、inputクラスのwidth（%設定）/max-width（実寸設定）の同時設定、inputの子inputのdisplay設定（inlineからの）。


091
　buttonのタイプ、親のプロパティで指定されていなければ子で指定、という技を習得すべし。

092
　useState使用。onChangeで変更を更新して、最終的にボタンでコンソール出す。

093
　submit後のinput欄クリアとバリデーション{名前が空欄ではない、または、年齢の数字がネガティブではない}設定。
　2way bindingを適用させてクリアを実現する。

　ageがもしナンバーではなくて文字列が入力されたら（もしくはプログラム的に文字として認識される変数であれば）、その文字を数字に変えなければならないが、簡単な方法がレクチャで紹介されているので注目。
　
094
　リストの作成準備。
　UsersListコンポーネントおよびCSSを作成。Appコンポーネントでインポート。
　ここで、入力されたデータをアップリフトして、UsersListでそのデータを使用するという流れ。
　アップリフトは次の項にて。ここでは、リストをhtmlで表示するよう土台作るのみ。親には空のオブジェクト配列を仮に入れておく。

095
　mapを使って、データをリフトする。
　データの積み上げ方法をしっかり学習する。

